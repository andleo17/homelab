networks:
  proxy:
    external: true
  internal:

services:
  web:
    image: nginx:alpine
    restart: unless-stopped
    networks:
      - internal
      - proxy
    volumes:
      - /homelab/nextcloud/data:/var/www/html:ro
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
    env_file:
      - .env
    depends_on:
      - app
    labels:
      # HTTP
      - traefik.enable=true
      - traefik.http.routers.nextcloud.rule=Host(`${HOSTNAME}`)
      - traefik.http.routers.nextcloud.entrypoints=web
      - traefik.http.routers.nextcloud.middlewares=nextcloud-https-redirect
      - traefik.http.middlewares.nextcloud-https-redirect.redirectscheme.scheme=websecure
      # HTTPS
      - traefik.http.routers.nextcloud-secure.tls=true
      - traefik.http.routers.nextcloud-secure.rule=Host(`${HOSTNAME}`)
      - traefik.http.routers.nextcloud-secure.entrypoints=websecure
      - traefik.http.routers.nextcloud-secure.tls.certresolver=production
      - traefik.http.routers.nextcloud-secure.middlewares=authelia@docker

  db:
    image: postgres:alpine
    restart: unless-stopped
    networks:
      - internal
    volumes:
      - /homelab/nextcloud/postgresql:/var/lib/postgresql/data
    env_file:
      - .env
    

  redis:
    image: redis:alpine
    restart: unless-stopped
    networks:
      - internal

  app:
    image: nextcloud:fpm-alpine
    container_name: nextcloud
    restart: unless-stopped
    networks:
      - internal
    volumes:
      - /homelab/nextcloud/data:/var/www/html
    env_file:
      - .env
    environment:
      - POSTGRES_HOST=db
      - REDIS_HOST=redis
    depends_on:
      - db
      - redis
    

  cron:
    image: nextcloud:fpm-alpine
    restart: unless-stopped
    env_file:
      - .env
    networks:
      - internal
    volumes:
      - /homelab/nextcloud/data:/var/www/html
    entrypoint: /cron.sh
    depends_on:
      - db
      - redis